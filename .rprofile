options(device = 'quartz')
options(repos  = 'http://cran.cnr.berkeley.edu')

roundSig <- function(x) round(x, -floor(log10(abs(x))))

samplesPlot <- function(samples, ind=1:ncol(samples), burnin=NULL, width=7, height=4, legend=TRUE, legend.location='topright') {
    ## device window and plotting parameters
    dev.new(height=height, width=width)
    par(mfrow=c(1,2), cex=0.7, cex.main=1.5, lab=c(3,3,7), mgp=c(0,0.6,0), mar=c(2,1,2,1), oma=c(0,0,0,0), tcl=-0.3, yaxt='n', bty='l')
    ## process samples
    samples <- samples[, ind, drop=FALSE]
    if(!is.null(burnin))
        samples <- samples[(burnin+1):dim(samples)[1], , drop=FALSE]
    nparam <- ncol(samples)
    rng <- range(samples)
    ## traceplots
    plot(1:nrow(samples), ylim=rng, type='n', main='Traceplots', xlab='', ylab='')
    for(i in 1:nparam)
        lines(samples[,i], col=rainbow(nparam, alpha=0.75)[i])
    ## posterior densities
    xMin <- xMax <- yMax <- NULL
    for(i in 1:nparam) {
        d <- density(samples[,i])
        xMin <- min(xMin,d$x); xMax <- max(xMax,d$x); yMax <- max(yMax, d$y) }
    plot(1, xlim=c(xMin,xMax), ylim=c(0,yMax), type='n', main='Posterior Densities', xlab='', ylab='')
    alpha_density <- 0.2
    for(i in 1:nparam)
        polygon(density(samples[,i]), col=rainbow(nparam, alpha=alpha_density)[i], border=rainbow(nparam, alpha=alpha_density)[i])
    if(legend & !is.null(dimnames(samples)) & is.character(dimnames(samples)[[2]]))
        legend(legend=dimnames(samples)[[2]], fill=rainbow(nparam, alpha=0.5), bty='n', x=legend.location)
}

makeActiveBinding('qqq', function() q('no'), .GlobalEnv)

makeActiveBinding('rrr', function() eval(quote(rm(list = setdiff(ls(), c('roundSig', 'samplesPlot', 'qqq', 'rrr')))), envir = .GlobalEnv), .GlobalEnv)

